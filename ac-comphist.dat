((("af" .
   [2 0])
  ("sync-call-service" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 2])
  ("call-service" .
   [1 0 0 0 1 0 0 1 0 0 0 1])
  ("sync-fn" .
   [3 0 0 1 0 0 1])
  ("compare-and-set!" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("result" .
   [7 0 0 0 0 0])
  ("args" .
   [8 0 0 0])
  ("async-fn" .
   [2 0 3 0 2 0 0 3])
  ("arg2" .
   [5 0 0 0])
  ("arg1" .
   [5 0 0 0])
  ("callback-fn" .
   [2 0 0 2 1 0 0 0 0 0 2])
  ("deliver" .
   [2 0 0 0 0 0 0])
  ("sum" .
   [2 0 0])
  ("realized?" .
   [1 0 0 0 0 0 0 0 0])
  ("get-site" .
   [1 0 0 0 0 0 0 0])
  ("url" .
   [1 0 0])
  ("slurp" .
   [0 0 1 0 0])
  ("Thread/currentThread" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 1])
  ("a-fn" .
   [1 0 0 0])
  (":done!" .
   [1 0 0 0 0 0])
  ("class" .
   [5 0 0 0 0])
  ("deref" .
   [2 0 0 0 0])
  ("lc-reduced-step" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("reduced-step" .
   [0 0 0 0 0 0 0 2 0 0 0 0])
  ("iterate" .
   [1 0 0 0 0 0 0])
  ("->" .
   [1 0])
  ("indexed-step" .
   [0 0 0 0 0 2 0 0 0 0 0 2])
  ("count" .
   [1 0 0 0 0])
  ("test-recur" .
   [0 0 0 0 0 1 0 0 0 0])
  ("-1" .
   [1 0])
  ("coll" .
   [8 0 0 0])
  ("new-liveness" .
   [1 0 0 0 0 0 2 0 0 0 0 0])
  ("nil" .
   [6 0 0])
  ("count-neightbours" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("new-board" .
   [7 0 0 0 0 0 0 0 0])
  ("recur" .
   [3 0 0 0 0])
  (">=" .
   [2 0])
  ("find" .
   [1 0 0 0])
  ("get-in" .
   [1 0 0 0 0 0])
  ("loc" .
   [2 0 0])
  ("neighbours" .
   [0 0 1 2 0 0 0 0 0 0])
  ("for" .
   [1 0 0])
  ("dy" .
   [2 0])
  ("dx" .
   [2 0])
  (":when" .
   [1 0 0 0 0])
  ("clojure.pprint/pprint" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 1])
  ("ns" .
   [2 0])
  ("glider" .
   [9 0 0 1 0 0])
  ("empty-board" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("living-cells" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":on" .
   [3 0 0])
  ("coordinates" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("board" .
   [21 0 0 0 0])
  (":2" .
   [1 0])
  ("users" .
   [2 0 0 0 0])
  (":name" .
   [2 0 0 0 0])
  ("assoc-in" .
   [2 0 0 0 0 0 0 0])
  ("assoc" .
   [2 0 0 0 0])
  ("pprint" .
   [3 0 0 0 0 0])
  ("repeat" .
   [3 0 0 0 0 0])
  ("vec" .
   [1 0 0])
  ("nil." .
   [0 0 0 2])
  ("reduce-by" .
   [4 0 0 0 0 0 0 0 0])
  (":product" .
   [3 0 0 0 0 0 0 0])
  ("conj" .
   [2 0 0 0])
  (":customer" .
   [5 0 0 0 0 0 0 0 0])
  ("order" .
   [1 0 0 0 0])
  ("orders" .
   [4 0 0 0 0 0])
  ("%2" .
   [2 0])
  ("%1" .
   [1 0])
  (":total" .
   [1 0 0 0 0 0])
  ("get-reduced" .
   [0 0 0 1 0 0 0 0 0 0 1])
  (":info" .
   [5 0 0 0 0])
  (":age" .
   [6 0 1 0])
  ("version1" .
   [5 0 0 1 1 0 0 0])
  ("reduce" .
   [6 0 0 0 0 0])
  ("key-fn" .
   [5 0 0 0 0 0])
  ("key-vec" .
   [0 0 0 0 0 1 0])
  ("get-nested" .
   [2 0 0 0 0 1 0 0 0 0])
  (":or" .
   [1 0 0])
  ("def" .
   [18 0 0])
  ("window" .
   [2 0 0 0 0 0])
  ("range" .
   [3 0 0 0 0])
  ("map" .
   [1 0 0])
  ("apply" .
   [1 0 0 1 0])
  ("or" .
   [1 0])
  ("long-calculation" .
   [0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0])
  ("future" .
   [1 0 0 0 0 0])
  ("Thread/sleep" .
   [0 0 0 0 0 0 0 0 0 1 0 0])
  ("println" .
   [2 0 0 0 0 0 0])
  ("fn" .
   [5 0])
  ("numbers" .
   [1 0 0 0 0 0 0])
  ("seq" .
   [2 0 0])
  ("sync" .
   [1 0 0 0])
  ("comp" .
   [1 0 0 0])
  ("a" .
   [1])
  ("mapcat" .
   [2 0 0 0 0 0])
  ("the" .
   [1 0 0])
  ("this" .
   [1 0 0 0])))
